input_path = fullfile(get_input_root,'day_21.txt');
txt = read_txt(input_path);
lines = strsplit(txt,'\r\n');

x = cellfun(@(x)(strsplit(x,': ')),lines,'UniformOutput' ,false);
x = cat(1,x{:});
% x = readcell(input_path,"Delimiter",':',"TextType",'char');

i_root = strcmp(x(:,1),'root');



e_r0 = x{i_root,2};

v_r = regexp(e_r0, '[\*\+\-\/]', 'split');
e_r1 = e_r0;
x = x(~i_root,:);

while contains(e_r1,x(:,1))
    for i1 = 1:size(x(:,1))
        e_r1 = strrep(e_r1,x{i1,1},['(',x{i1,2},')']);
    end
end
e_r1
%eval(e_r1)



%results = ((2) * ((((((5) * (((2) * ((((((2) * ((1) + (5))) + (((12) + ((2) * (4))) + ((3) * (3)))) * (2)) * ((((((((((6) + (((2) + (11)) * (2))) - (9)) + (1)) + (((((((7) * (3)) / (3)) * ((3) * (((2) * ((3) + ((4) * ((2) + ((4) * (2)))))) / (2)))) + ((4) + (((((3) + (6)) * (3)) + (2)) * (2)))) * (2)) + ((2) * (((((3) * (9)) + (((2) * (((((4) + (6)) + (13)) - (4)) + ((4) + ((6) * (3))))) + ((3) + (3)))) - ((2) + ((2) * ((19) - (2))))) * (5))))) + (((2) * (((((4) + (3)) + (((12) + (5)) * (3))) * ((17) * (3))) - (((4) + ((9) * (3))) * ((10) + ((3) * (7)))))) + (((((((3) * (7)) * (5)) + ((7) * (7))) / ((2) + (5))) * (2)) + ((((3) * ((4) + (7))) + ((((4) * ((1) + ((2) * (9)))) + ((3) * (7))) * (2))) + ((2) * (3)))))) + (((4) * (2)) * ((((8) + (15)) * (5)) + ((18) + (4))))) * (5)) - (((19) * (((9) * ((4) * ((2) + (5)))) + ((((11) + (6)) * (3)) + (8)))) + ((((3) * (5)) * (7)) * (((3) * (3)) * (5))))) * (5))) + ((((((((((1) + ((5) + (3))) * (7)) + ((((5) + (2)) + ((15) * (2))) + (1))) * (((4) * ((2) * (3))) + ((14) + (((3) * (((((3) * (4)) + (2)) / (2)) + (4))) + ((3) * (14)))))) + ((2) * (((4) * (((((17) + (4)) * (3)) * (((11) * ((9) - (2))) + (2))) + ((5) * ((((2) * (4)) * (((1) + ((5) + (((11) + ((5) * (2))) * (2)))) - ((2) * (4)))) + ((((((5) * ((1) + (11))) + (13)) * (2)) / (2)) * (((6) * (5)) + (3))))))) - ((((5) * ((3) * (3))) * ((3) * (((((5) * ((16) + (10))) - ((2) * (17))) + (5)) + (((12) + (5)) + ((3) * (3)))))) + (((5) * ((7) * (2))) + (((((13) * ((((9) * (2)) + (6)) + ((((((((5) + (1)) * (2)) + (3)) + (16)) * (5)) / (5)) - (2)))) * (2)) - ((((5) * (12)) + (((((4) * (11)) / (2)) / (2)) + (1))) + (((3) + (4)) * (((1) + ((5) + (2))) * (4))))) * (2))))))) * (3)) + (((((3) * ((((19) * ((12) + (1))) + (((5) * ((2) * (4))) * ((4) * ((3) * (2))))) - ((8) * (15)))) / (3)) + ((19) * ((3) * (10)))) * (((((4) + (3)) * (2)) * (2)) * (13)))) * (3)) + (((((((2) * (4)) + (3)) * (((3) * (3)) + (3))) + ((5) * ((4) * (4)))) * (((((((7) + ((17) * (2))) - (12)) - (7)) + ((5) + (2))) * ((((2) * ((((18) + (13)) + (((2) * (9)) * (4))) * (2))) - ((((3) * ((((10) * (10)) / (2)) / (2))) + ((2) * (11))) + (((4) + (((9) + (4)) + (((5) * (4)) / (2)))) + (10)))) + (15))) + (((((((8) - (2)) + (1)) * (((15) * ((2) * ((2) + ((2) * (12))))) - ((((18) * (3)) * (3)) + (19)))) * ((7) * ((1) + ((3) * (2))))) / ((4) + (3))) + (((((((2) * (((((4) * (11)) + (6)) - (9)) + ((4) * (3)))) / (2)) + (((20) + ((4) + (19))) * (2))) * (((((4) * ((4) + (7))) - (4)) + (19)) * (16))) / (2)) / ((5) + (3)))))) + ((((((2) * (((((1) + (16)) * (3)) + (4)) + (((2) * (4)) * (3)))) * ((((8) * (3)) + (1)) * (5))) - (((((((((4) * (((15) - (3)) - (1))) - (1)) + ((((2) * (4)) * (10)) + (((((4) * ((2) + (5))) - ((1) + (6))) + ((((4) * (8)) * (2)) / (2))) + ((9) * (4))))) / (2)) + (((2) * ((3) * (3))) + ((5) + (8)))) * (5)) + ((2) * (3))) + (((((8) * (2)) * (7)) + (((20) * ((2) * ((11) + (5)))) - ((2) + ((11) * (19))))) * (3)))) - ((((3) * ((3) * (3))) + ((4) * ((3) + (8)))) * ((5) * (13)))) * (((((14) / (2)) * (2)) * (3)) * ((3) * (3)))))))) / (2))) / (5)) + (((3) * ((((((1) + ((2) * (3))) * (4)) - ((3) * (3))) * (((3) * (8)) - (1))) + ((((13) - (3)) * ((2) * (5))) + ((2) * ((5) * (5)))))) * (((((((2) * ((5) + ((2) * (4)))) - ((2) + (4))) + ((7) * (3))) * (2)) * (2)) * (((2) * (4)) + (5))))) * ((((2) * ((((((2) * (3)) + ((2) * ((3) * (5)))) + (((13) + (18)) + (10))) + ((3) * (17))) + ((((2) * ((17) - (1))) + (((((4) * (19)) / (4)) * (2)) + (3))) - ((2) * (5))))) * (((5) * (((((14) / (2)) * (2)) + (((14) - (1)) * (3))) * (2))) + ((((4) * (4)) * (4)) + ((2) * (((3) * (((1) + ((2) * (17))) + ((3) * (8)))) + ((((((8) + ((2) * (3))) + ((3) + (16))) + ((16) * ((16) - (3)))) * (2)) + (((((2) * ((4) * (4))) + (5)) + ((((3) * (2)) * (3)) + ((5) * (5)))) + (((2) * (((6) + ((4) + (3))) + (4))) - (4))))))))) + ((((5) + ((4) * (17))) * (11)) * (((11) * (3)) * ((((((((10) * (10)) / (2)) - (((5) * (7)) / (5))) + (3)) + ((3) * ((1) + (18)))) * (2)) / (2)))))) - ((((2) + (((4) * (4)) * ((3) * (3)))) + (((2) * ((1) + (10))) * (((((2) * ((((((((((((((3) * ((((((((((3) + (8)) + (2)) * (5)) + (6)) + ((((5) * (3)) * (16)) + ((((4) + (3)) + (6)) * (2)))) + ((8) * ((((((5) * (13)) + (((((2) * ((2) * (3))) + ((5) * ((5) * (5)))) * (5)) + ((((2) * (5)) + (4)) * (11)))) + ((2) * (((((((3) * ((((((3) * (13)) + ((2) * (((12) + ((3) * (13))) + (16)))) + (((13) + ((2) * ((11) + ((2) * (9))))) + ((((((7) + ((20) + (((3) * (3)) + (2)))) + (((((2) * ((5) + (12))) + (((10) + ((2) * (3))) + ((((1) + (13)) / (2)) * (3)))) + (((3) * (((((19) + (((2) * (16)) - ((4) + (6)))) + (2)) + (3)) / (2))) / (3))) - (5))) + (((5) * (3)) + ((3) * (5)))) + (6)) * (2)))) / ((3) * (2))) + ((4) * (((20) + (3)) + (6))))) + (((((8) * (2)) * ((2) * ((17) + (((5) + (1)) * (2))))) + ((2) * (((((((((((((2) * ((6) + (17))) * (2)) * (4)) / (2)) + (1)) + (((4) * ((19) + (4))) / (2))) + ((3) * (11))) + ((5) * (((8) * (3)) + (19)))) * (2)) + ((((((((4) + (((((2) * ((8) + (5))) + (3)) * (5)) + ((((3) * (3)) + (2)) * (4)))) + (((((3) * ((3) * (3))) - (6)) + ((19) * ((5) * ((9) - (2))))) / ((3) + (4)))) * (2)) / (6)) + ((((((10) * ((((((4) * (8)) * ((((5) * (11)) + (((((((6) + (17)) * (3)) + ((2) * (16))) * (4)) + (((((17) * (10)) - ((((4) + (7)) * (2)) + (((1) + ((2) + (10))) - (4)))) - (((2) * (4)) + (14))) + (18))) - ((4) * ((13) * (3))))) + ((((((4) * (((((((((((((5) + (12)) * (5)) * (3)) + (((((3) * (4)) / (2)) * (4)) + (2))) + (((((((4) * (2)) * (4)) + (15)) * (6)) + (((4) + (3)) * ((((3) * ((2) + (5))) / (3)) + (4)))) + (((5) * ((11) * (((1) + ((4) * (5))) + (4)))) - (((((3) * (3)) + (((1) + (12)) + ((17) + (2)))) + (6)) * ((2) + (5)))))) / (3)) - ((((5) * (4)) * (2)) + ((5) * ((5) * (5))))) * (2)) + ((((((3) + (17)) * (((5) + (2)) * (4))) + ((((((2392) + (((14) + (10)) * ((2) * (((9) + (2)) + (6))))) + (((9) + (((5) + (((4) + ((3) * (3))) * (2))) * (2))) * ((2) + (5)))) / (3)) - ((5) * ((9) + ((2) * ((((5) + (5)) + (((5) * (3)) + ((6) + (10)))) - ((3) * (2))))))) * ((15) * (3)))) * (2)) - ((11) * (((((12) + (1)) + (6)) + ((4) * ((5) + (2)))) + ((2) * (7)))))) + ((17) * ((((5) * (5)) + (((2) + ((3) + (12))) * (2))) - (18)))) / (5)) + ((6) * ((((((2) * ((((2) * (6)) + (11)) * (2))) / (4)) + ((4) * (2))) * ((2) * (3))) / (2))))) - ((((((13) * (2)) + (3)) + (((4) * (8)) + ((7) * (3)))) + (((4) + ((3) * (3))) * ((3) * (3)))) + ((17) * (5)))) / (10)) - ((2) * ((2) * (((3) * ((15) + (14))) + (20))))) / (3)))) + ((12) * (((8) * (((9) + (2)) + ((((((3) * (3)) * (2)) / (2)) + (1)) * (3)))) / (4)))) / (((2) + (4)) + (2))) - (((((3) * (14)) * (7)) + (((((11) + (((14) - (3)) + ((11) - (3)))) + (1)) * (2)) + (((3) * (3)) * (5)))) * (2)))) + ((((((1) + (5)) * ((3) * (3))) + (3)) + ((2) * (((3) * (3)) + ((((17) * (2)) * (2)) * (2))))) * (2))) / (2)) - (((3) * ((18) * (3))) + ((((7) * ((3) * (3))) * ((2) + (5))) - (((3) + (6)) * (((2) + (9)) + (2)))))) * (2))) * (2)) - ((((2) * (((((12) + ((7) * (2))) / (2)) + ((3) * (2))) + (4))) / (2)) * (7)))) / (3)) - (((((3) * (3)) + (((10) + (1)) * (2))) + (1)) * (12))))) / (2))) / (2)) - (((((((((2) + (17)) + (((2) * (4)) * (3))) - (14)) * (15)) + (((((7) * ((4) * (2))) + ((14) + (15))) + (((4) * (3)) - (1))) + (((5) + (6)) * (((((((5) * (5)) + ((12) + (2))) + (5)) / (2)) / (2)) * (2))))) * (6)) / (3)) / (2))) * (2)) - (((2) * ((3) + ((2) * (8)))) / (2))))) / ((5) + (5))) - (((7) * (3)) + ((2) * (19)))))) + ((((((((3) * (2)) * (4)) + ((6) + (1))) + (((18) + (1)) + (3))) * (2)) * (5)) - (((((16) + ((5) * (2))) + (2)) + (((2) * ((((2) * ((2) + (11))) - (((1) + ((3) + ((5) * (2)))) / (2))) * (3))) / (6))) * (3)))) / ((2) * (3))) - ((((2) * (((((3) * (3)) * (5)) - ((7) * (2))) + (6))) - (1)) * (2)))) + (((((5) * ((5) + ((3) * (2)))) * (2)) + ((((((4) * (5)) + (((3) * (7)) + ((2) * (5)))) + ((10) * ((4) * (4)))) + (15)) / (2))) * (2))) + (((2) * ((2) * ((((5) * (13)) - ((7) * (2))) + ((7) * (4))))) + (((((7) * (2)) + ((5) + (((2) * (3)) * (4)))) * (((3) * (2)) + (1))) * (2)))) / (5)) - ((2) * ((((6) * ((5) + ((8) * (12)))) / ((2) * (3))) * (3)))) * ((9) + (2))) + ((12) * (19))) + (((((((3) * (2)) + (1)) * ((9) - (2))) + (1)) + (((12) + (5)) * (((15) + (2)) + (2)))) * (2))) + (((3) * (((8) * (3)) + ((((18) + (11)) * (3)) / (3)))) * (3))) / (5)) - (((((3) * (2)) + ((17) + ((3) * (2)))) * ((6) + (5))) * (2))) / (5)) + (((2) * (((9) + (2)) + ((2) * (((3) * ((((3) * (2)) + (20)) + ((1) + (6)))) - (((2) + (((1) + ((2) * (3))) * (3))) + (3)))))) * (2)))) - (((3) * ((5) + ((3) * (2)))) * ((4) * (6)))) / (2)) + ((2) * (((((((((2) * (5)) * ((3) * (4))) / (4)) + (((((7) * (3)) - (4)) + (2)) - (6))) * (2)) / (2)) + ((9) * (((((5) * ((4) * (2))) / (2)) - ((3) * (2))) / (2)))) + (((2) * (14)) + (15))))))) / (2)))) + (((((((3) * (3)) * (3)) + (4)) * (4)) * ((11) * (7))) * ((((((3) * ((17) + (((5) * (5)) - (1)))) * ((3) + (8))) + (((10) * (6)) + ((((5) * (11)) + ((2) * ((5) + (((16) + ((15) + (15))) + ((2) * (5)))))) + (4)))) * ((((((((((3) * (5)) + (((20) - ((2) * (3))) * ((((3) * (9)) + ((3) * (((3) * (3)) + (2)))) / ((2) * (3))))) + (((((2) * (3)) * (2)) + (7)) * (4))) + (((2) * (13)) + (5))) + ((((((((3) * (7)) + (8)) * (7)) * (2)) + ((((3) * (3)) * ((3) * (7))) + ((3) * ((5) * (7))))) / (4)) + ((((2) * (8)) - (3)) + (((2) * (13)) * (4))))) * (((2) * (4)) + (((2) * (((5) + ((4) * (2))) * (3))) + ((2) + (9))))) + ((((((3) + ((2) * (5))) * ((((10) * (((2) * (16)) - ((5) * (2)))) - ((((((3) * (((2) * (4)) + (5))) + (3)) / (2)) + ((7) * (2))) - (6))) * (2))) + (((((((3) * (3)) * (4)) + ((((5) + ((1) + (5))) * (9)) + (((4) * (((8) + ((5) + (2))) + (14))) / (2)))) + (((2) * ((((3) + ((5) * ((5) + (((14) / (2)) * (3))))) + (1)) / (2))) * (6))) + ((7) * ((2) * ((1) + ((2) * ((10) + (1))))))) * (3))) * (5)) + ((((((6) * (5)) * (((12) * (3)) - (12))) + (((((9) * ((2) + ((((3) + (4)) + ((4) * (4))) * (7)))) + ((4) * ((((5) + (2)) * (5)) + (((3) * ((2) * (3))) * (3))))) * ((2) + (5))) * (3))) * (3)) + (((((((5) + (((2) * (4)) * (3))) * (3)) / (3)) * (((2) * ((2) * (((8) * (2)) * (2)))) / ((4) * (2)))) * (((((10) * ((2) + (5))) + (((7) + ((((8) * (2)) * (5)) / (2))) + ((2) * ((((((3) * (4)) * (2)) + (5)) * (2)) / (2))))) + ((2) * ((9) + (2)))) * (2))) / (4))))) + (((((4) * (2)) * (((13) + ((2) * (3))) * (3))) + (1)) * ((((2) * ((5) * (5))) * ((5) * (11))) - (((6) + ((2) + (4))) + (9))))) * (2))) + (((((2) * ((((((2) * (((3) + (3)) + ((7) * (13)))) - ((17) * (3))) * ((((((((5) * (2)) * (2)) + (8)) + ((11) + (((2) + (15)) * (2)))) + ((2) * (3))) * (2)) - (7))) + (((2) * ((1) + (6))) * (((17) + (12)) + ((((3) * (7)) + (2)) * ((5) * (2)))))) * (2))) * (((((4) * (2)) * ((17) + ((((1) + ((2) * (5))) * (2)) * (3)))) / (8)) * (4))) + (((((13) * ((3) * (11))) + ((((13) * (2)) + ((3) * (19))) * (4))) * (3)) * (((((2) + (((3) * (4)) + ((4) + ((5) * (5))))) * (3)) + ((((((((6) + ((((3) + ((((4) * (2)) + (2)) + (3))) + (1)) + (6))) * (3)) + (4)) + ((11) * (2))) - (((2) * ((16) + (1))) / (2))) + (((3) * (15)) + (8))) - (((5) * (5)) + (12)))) * (5)))) * (((3) * ((((((2) * (3)) * (4)) + (2)) + (3)) + ((3) * (((2) * (3)) * (3))))) - ((2) * ((8) + (15)))))));